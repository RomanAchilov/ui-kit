export declare const Icons: {
    Arrow: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Account: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Lock: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Warning: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Agents: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Notification: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Settings: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Plugins: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Logs: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Search: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Filters: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    NewWindow: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Checkbox: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    GridLayout: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    ListLayout: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Delete: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Add: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Close: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Coverage: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Expander: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Class: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Function: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Package: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Test: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    ProjectTree: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    OpenLive: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Check: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Register: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Copy: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Dashboard: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Scope: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    EyeCrossed: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Star: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    CoverageArrow: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    MoreOptions: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Edit: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Eye: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Clock: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Total: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    ManageSessions: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Start: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Info: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    TestToCodeMapping: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Locked: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Unlocked: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Unregister: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    MoreOptionsWithBorder: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Agent: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    ServiceGroup: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    BuildList: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Planet: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Mouse: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Stopwatch: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Logo: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Unicorn: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    UnicornWithCircle: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Unaffected: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Cancel: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Success: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Test2Code: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    PASSED: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    FAILED: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Complete: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    SortingArrow: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    OfflineAgent: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    UncoveredMethods: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    RealTime: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Global: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Graph: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Flag: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    FilledFlag: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    StateWatcher: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Data: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Play: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
    Pause: ({ width, height, ...rest }: import("./generic-icon-types").IconProps) => JSX.Element;
};
